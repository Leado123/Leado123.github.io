{
  "version": 3,
  "sources": ["browser-external:canvas", "browser-external:zlib", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/universalModuleDefinition", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/display_utils.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/util.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/compatibility.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/is_node.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/font_loader.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_utils.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_storage.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api_compatibility.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/canvas.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/pattern_helper.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/worker_options.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/message_handler.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/metadata.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/optional_content_config.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/transport_stream.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_layer.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/scripting_utils.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/text_layer.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/svg.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/xfa_layer.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_stream.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network_utils.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/content_disposition.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/fetch_stream.js", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/bootstrap", "../../../node_modules/srpv-js/node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/pdf.js", "../../../node_modules/srpv-js/src/App/Viewer.tsx", "../../../node_modules/srpv-js/node_modules/print-js/dist/print.js", "../../../node_modules/srpv-js/src/App/Icons/Icons.tsx", "../../../node_modules/srpv-js/src/App/App.tsx"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"canvas\" has been externalized for browser compatibility. Cannot access \"canvas.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isDataScheme,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1, Node.js<12.0.0\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream =\n      require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n}\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return this._pdfInfo.isPureXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @typedef {Object} RefProxy\n   * @property {number} num\n   * @property {number} gen\n   */\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      arguments.length > 0\n    ) {\n      deprecated(\"saveDocument no longer accepts any options.\");\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n *\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well. The default value is `false`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\n *   canvas itself; useful e.g. for printing. The default value is `false`.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this._annotationsIntent = intent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  getXfa() {\n    return (this._xfaPromise ||= this._transport.getPageXfa(this._pageIndex));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    includeAnnotationStorage = false,\n    optionalContentConfigPromise = null,\n  }) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      arguments[0]?.annotationStorage !== undefined\n    ) {\n      deprecated(\n        \"render no longer accepts an `annotationStorage` option, \" +\n          \"please use the `includeAnnotationStorage`-boolean instead.\"\n      );\n      includeAnnotationStorage ||= !!arguments[0].annotationStorage;\n    }\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const annotationStorage = includeAnnotationStorage\n      ? this._transport.annotationStorage.serializable\n      : null;\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof URL) {\n        throw new Error(`LoopbackPort.postMessage - cannot clone: ${value}`);\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty?.(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getPageXfa(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageXfa\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const { canvasContext, viewport, transform, imageLayer, background } =\n        this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const obj = this._storage.get(key);\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] = m[0] * x;\n    m[1] = m[1] * x;\n    m[2] = m[2] * y;\n    m[3] = m[3] * y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      smask.backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  // eslint-disable-next-line no-shadow\n  class CanvasGraphics {\n    constructor(\n      canvasCtx,\n      commonObjs,\n      objs,\n      canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    ) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      // Patterns are painted relative to the initial page/form transform, see\n      // PDF spec 8.7.2 NOTE 1.\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n      if (canvasCtx) {\n        // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n        // the transformation must already be set in canvasCtx._transformMatrix.\n        addContextCurrentTransform(canvasCtx);\n      }\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    }\n\n    executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    }\n\n    endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    }\n\n    // Graphics state\n    setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    }\n\n    setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    }\n\n    setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    }\n\n    beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    suspendSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    }\n\n    resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    }\n\n    save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    }\n\n    restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    }\n\n    transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    // Path\n    constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    }\n\n    closePath() {\n      this.ctx.closePath();\n    }\n\n    stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          const lineWidth = this.getSinglePixelWidth();\n          ctx.save();\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    }\n\n    eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    }\n\n    fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    }\n\n    eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    }\n\n    endPath() {\n      this.consumePath();\n    }\n\n    // Clipping\n    clip() {\n      this.pendingClip = NORMAL_CLIP;\n    }\n\n    eoClip() {\n      this.pendingClip = EO_CLIP;\n    }\n\n    // Text\n    beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    }\n\n    setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    }\n\n    setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    }\n\n    setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    }\n\n    setTextRise(rise) {\n      this.current.textRise = rise;\n    }\n\n    moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    }\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          const measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            const characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n      return undefined;\n    }\n\n    showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    }\n\n    // Type3 fonts\n    setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    }\n\n    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    }\n\n    // Color\n    getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPattern(IR);\n      }\n      return pattern;\n    }\n\n    setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    }\n\n    setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    }\n\n    setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    }\n\n    shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPattern(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    }\n\n    // Images\n    beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    }\n\n    beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    }\n\n    beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Resetting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    }\n\n    endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    }\n\n    beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    }\n\n    endAnnotations() {\n      this.restore();\n    }\n\n    beginAnnotation(rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    }\n\n    endAnnotation() {\n      this.restore();\n    }\n\n    paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    }\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageMaskXObjectGroup(images) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    }\n\n    paintInlineImageXObject(imgData) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      let widthScale = Math.max(\n        Math.hypot(currentTransform[0], currentTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(currentTransform[2], currentTransform[3]),\n        1\n      );\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    }\n\n    paintInlineImageXObjectGroup(imgData, map) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    }\n\n    paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    }\n\n    // Marked content\n\n    markPoint(tag) {\n      // TODO Marked content.\n    }\n\n    markPointProps(tag, properties) {\n      // TODO Marked content.\n    }\n\n    beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n\n    beginMarkedContentProps(tag, properties) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    }\n\n    endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    }\n\n    // Compatibility\n\n    beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    }\n\n    endCompat() {\n      // TODO stop ignoring undefined operators\n    }\n\n    // Helper functions\n\n    consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    }\n\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    }\n\n    getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    }\n\n    isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n} from \"../shared/util.js\";\n\nlet svgElement;\n\n// TODO: remove this when Firefox ESR supports DOMMatrix.\nfunction createMatrix(matrix) {\n  if (typeof DOMMatrix !== \"undefined\") {\n    return new DOMMatrix(matrix);\n  }\n  if (!svgElement) {\n    svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  }\n  return svgElement.createSVGMatrix(matrix);\n}\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this._matrix = IR[8];\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      ctx.canvas.width,\n      ctx.canvas.height,\n      true\n    );\n\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n    tmpCtx.beginPath();\n    tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n    if (!shadingFill) {\n      tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n      if (this._matrix) {\n        tmpCtx.transform.apply(tmpCtx, this._matrix);\n      }\n    } else {\n      tmpCtx.setTransform.apply(tmpCtx, ctx.mozCurrentTransform);\n    }\n    applyBoundingBox(tmpCtx, this._bbox);\n\n    let grad;\n    if (this._type === \"axial\") {\n      grad = tmpCtx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = tmpCtx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    tmpCtx.fillStyle = grad;\n    tmpCtx.fill();\n\n    const pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n    pattern.setTransform(createMatrix(ctx.mozCurrentTransformInverse));\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y1 === y2) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._matrix = IR[6];\n    this._bbox = IR[7];\n    this._background = IR[8];\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this._matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this._matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this._matrix) {\n        ctx.transform.apply(ctx, this._matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, bbox, x0, y0, x1, y1) {\n    if (Array.isArray(bbox) && bbox.length === 4) {\n      const bboxWidth = x1 - x0;\n      const bboxHeight = y1 - y0;\n      graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n      graphics.clip();\n      graphics.endPath();\n    }\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    ctx = this.ctx;\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = ctx.mozCurrentTransformInverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = createMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), data);\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, { value: radio.checked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        textDivProperties.scale = textDivProperties.canvasWidth / width;\n        transform = `scaleX(${textDivProperties.scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\"' +\n          \" parameters specified.\"\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n", "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setupStorage(html, fieldId, element, storage) {\n    const storedData = storage.getValue(fieldId, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        html.textContent = storedData.value !== null ? storedData.value : \"\";\n        html.addEventListener(\"input\", event => {\n          storage.setValue(fieldId, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n        }\n        if (element.attributes.type === \"radio\") {\n          html.addEventListener(\"change\", event => {\n            const { target } = event;\n            for (const radio of document.getElementsByName(target.name)) {\n              if (radio !== target) {\n                const id = radio.id;\n                storage.setValue(id.split(\"-\")[0], { value: false });\n              }\n            }\n            storage.setValue(fieldId, { value: target.checked });\n          });\n        } else {\n          html.addEventListener(\"input\", event => {\n            storage.setValue(fieldId, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? null\n              : options[options.selectedIndex].value;\n          storage.setValue(fieldId, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage) {\n    const { attributes } = element;\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined || key === \"fieldId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.fieldId !== undefined) {\n      this.setupStorage(html, attributes.fieldId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const coeffs = parameters.viewport.transform.join(\",\");\n    rootDiv.style.transform = `matrix(${coeffs})`;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      const childHtml = document.createElement(name);\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n", "import React, {useEffect} from 'react';\nimport {PDFViewerProps} from \"./types/PDFViewerTypes\";\n\nexport const PdfViewer:React.FunctionComponent<PDFViewerProps> = ({pdf, page, scale}) => {\n    useEffect(() => {\n        renderPage({ pageNum: page, pdf: pdf!, scale: scale });\n    }, [page, scale]);\n\n    const onMouseMove = (canvas: HTMLCanvasElement, event: MouseEvent) => {\n        if(event.buttons === 1){\n            canvas.style.cursor = 'grabbing'\n            const el = document.querySelector('.ant-drawer-body') as HTMLDivElement\n            el.scrollLeft += -event.movementX\n            el.scrollTop += -event.movementY\n        } else {\n            canvas.style.cursor = 'default'\n        }\n    }\n\n    const renderPage = ({ pageNum, pdf, scale }: { pageNum: number, pdf: any, scale: number }) => {\n        const div = document.getElementById(`page-${pageNum}`) as HTMLDivElement;\n\n        const canvasRef = document.createElement('canvas') as HTMLCanvasElement;\n        canvasRef.className=\"shadowDocument\"\n        canvasRef.style.display = 'none'\n\n        canvasRef.addEventListener('mousemove', (event) => {\n            onMouseMove(canvasRef, event)\n        })\n\n\n\n        pdf && pdf.getPage(pageNum)\n            .then(function(page: any) {\n\n                const viewport = page.getViewport({scale: scale});\n                const canvas = canvasRef;\n                canvas.width = Math.floor(viewport.width );\n                canvas.height = Math.floor(viewport.height);\n\n                const renderContext = {\n                    canvasContext: canvas.getContext('2d') as CanvasRenderingContext2D,\n                    viewport: viewport\n                };\n\n\n\n\n\n                //@ts-ignore\n                if(div.children.length < 2){\n                    div.appendChild(canvasRef)\n\n                    let renderTask = page.render(renderContext)\n\n                    renderTask.promise.then(function () {\n\n                        canvasRef.style.display = 'block'\n                        if(div.children.length > 1){\n                            div.removeChild((document.querySelector(`#page-${pageNum}`) as HTMLDivElement).children[0])\n                        }\n                    })\n                }\n\n            }\n        );\n\n\n\n\n\n\n    };\n\n\n\n    return(\n        <div id={`page-${page}`} className=\"pdfViewer\"/>\n    );\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"printJS\"] = factory();\n\telse\n\t\troot[\"printJS\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sass_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sass/index.scss */ \"./src/sass/index.scss\");\n/* harmony import */ var _sass_index_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sass_index_scss__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _js_init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/init */ \"./src/js/init.js\");\n\n\nvar printJS = _js_init__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init;\n\nif (typeof window !== 'undefined') {\n  window.printJS = printJS;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (printJS);\n\n/***/ }),\n\n/***/ \"./src/js/browser.js\":\n/*!***************************!*\\\n  !*** ./src/js/browser.js ***!\n  \\***************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nvar Browser = {\n  // Firefox 1.0+\n  isFirefox: function isFirefox() {\n    return typeof InstallTrigger !== 'undefined';\n  },\n  // Internet Explorer 6-11\n  isIE: function isIE() {\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode;\n  },\n  // Edge 20+\n  isEdge: function isEdge() {\n    return !Browser.isIE() && !!window.StyleMedia;\n  },\n  // Chrome 1+\n  isChrome: function isChrome() {\n    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n    return !!context.chrome;\n  },\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\n  isSafari: function isSafari() {\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || navigator.userAgent.toLowerCase().indexOf('safari') !== -1;\n  },\n  // IOS Chrome\n  isIOSChrome: function isIOSChrome() {\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Browser);\n\n/***/ }),\n\n/***/ \"./src/js/functions.js\":\n/*!*****************************!*\\\n  !*** ./src/js/functions.js ***!\n  \\*****************************/\n/*! exports provided: addWrapper, capitalizePrint, collectStyles, addHeader, cleanUp, isRawHTML */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addWrapper\", function() { return addWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capitalizePrint\", function() { return capitalizePrint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"collectStyles\", function() { return collectStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addHeader\", function() { return addHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cleanUp\", function() { return cleanUp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRawHTML\", function() { return isRawHTML; });\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ \"./src/js/modal.js\");\n/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser */ \"./src/js/browser.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\nfunction addWrapper(htmlData, params) {\n  var bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;';\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>';\n}\nfunction capitalizePrint(obj) {\n  return obj.charAt(0).toUpperCase() + obj.slice(1);\n}\nfunction collectStyles(element, params) {\n  var win = document.defaultView || window; // String variable to hold styling for each element\n\n  var elementStyle = ''; // Loop over computed styles\n\n  var styles = win.getComputedStyle(element, '');\n\n  for (var key = 0; key < styles.length; key++) {\n    // Check if style should be processed\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';';\n    }\n  } // Print friendly defaults (deprecated)\n\n\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important; font-size: ' + params.font_size + ' !important;';\n  return elementStyle;\n}\n\nfunction targetStylesMatch(styles, value) {\n  for (var i = 0; i < styles.length; i++) {\n    if (_typeof(value) === 'object' && value.indexOf(styles[i]) !== -1) return true;\n  }\n\n  return false;\n}\n\nfunction addHeader(printElement, params) {\n  // Create the header container div\n  var headerContainer = document.createElement('div'); // Check if the header is text or raw html\n\n  if (isRawHTML(params.header)) {\n    headerContainer.innerHTML = params.header;\n  } else {\n    // Create header element\n    var headerElement = document.createElement('h1'); // Create header text node\n\n    var headerNode = document.createTextNode(params.header); // Build and style\n\n    headerElement.appendChild(headerNode);\n    headerElement.setAttribute('style', params.headerStyle);\n    headerContainer.appendChild(headerElement);\n  }\n\n  printElement.insertBefore(headerContainer, printElement.childNodes[0]);\n}\nfunction cleanUp(params) {\n  // If we are showing a feedback message to user, remove it\n  if (params.showModal) _modal__WEBPACK_IMPORTED_MODULE_0__[\"default\"].close(); // Check for a finished loading hook function\n\n  if (params.onLoadingEnd) params.onLoadingEnd(); // If preloading pdf files, clean blob url\n\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable); // Run onPrintDialogClose callback\n\n  var event = 'mouseover';\n\n  if (_browser__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isChrome() || _browser__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFirefox()) {\n    // Ps.: Firefox will require an extra click in the document to fire the focus event.\n    event = 'focus';\n  }\n\n  var handler = function handler() {\n    // Make sure the event only happens once.\n    window.removeEventListener(event, handler);\n    params.onPrintDialogClose(); // Remove iframe from the DOM\n\n    var iframe = document.getElementById(params.frameId);\n\n    if (iframe) {\n      iframe.remove();\n    }\n  };\n\n  window.addEventListener(event, handler);\n}\nfunction isRawHTML(raw) {\n  var regexHtml = new RegExp('<([A-Za-z][A-Za-z0-9]*)\\\\b[^>]*>(.*?)</\\\\1>');\n  return regexHtml.test(raw);\n}\n\n/***/ }),\n\n/***/ \"./src/js/html.js\":\n/*!************************!*\\\n  !*** ./src/js/html.js ***!\n  \\************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ \"./src/js/functions.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./print */ \"./src/js/print.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  print: function print(params, printFrame) {\n    // Get the DOM printable element\n    var printElement = isHtmlElement(params.printable) ? params.printable : document.getElementById(params.printable); // Check if the element exists\n\n    if (!printElement) {\n      window.console.error('Invalid HTML element id: ' + params.printable);\n      return;\n    } // Clone the target element including its children (if available)\n\n\n    params.printableElement = cloneElement(printElement, params); // Add header\n\n    if (params.header) {\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"addHeader\"])(params.printableElement, params);\n    } // Print html element contents\n\n\n    _print__WEBPACK_IMPORTED_MODULE_1__[\"default\"].send(params, printFrame);\n  }\n});\n\nfunction cloneElement(element, params) {\n  // Clone the main node (if not already inside the recursion process)\n  var clone = element.cloneNode(); // Loop over and process the children elements / nodes (including text nodes)\n\n  var childNodesArray = Array.prototype.slice.call(element.childNodes);\n\n  for (var i = 0; i < childNodesArray.length; i++) {\n    // Check if we are skipping the current element\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\n      continue;\n    } // Clone the child element\n\n\n    var clonedChild = cloneElement(childNodesArray[i], params); // Attach the cloned child to the cloned parent node\n\n    clone.appendChild(clonedChild);\n  } // Get all styling for print element (for nodes of type element only)\n\n\n  if (params.scanStyles && element.nodeType === 1) {\n    clone.setAttribute('style', Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"collectStyles\"])(element, params));\n  } // Check if the element needs any state processing (copy user input data)\n\n\n  switch (element.tagName) {\n    case 'SELECT':\n      // Copy the current selection value to its clone\n      clone.value = element.value;\n      break;\n\n    case 'CANVAS':\n      // Copy the canvas content to its clone\n      clone.getContext('2d').drawImage(element, 0, 0);\n      break;\n  }\n\n  return clone;\n}\n\nfunction isHtmlElement(printable) {\n  // Check if element is instance of HTMLElement or has nodeType === 1 (for elements in iframe)\n  return _typeof(printable) === 'object' && printable && (printable instanceof HTMLElement || printable.nodeType === 1);\n}\n\n/***/ }),\n\n/***/ \"./src/js/image.js\":\n/*!*************************!*\\\n  !*** ./src/js/image.js ***!\n  \\*************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ \"./src/js/functions.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./print */ \"./src/js/print.js\");\n/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser */ \"./src/js/browser.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  print: function print(params, printFrame) {\n    // Check if we are printing one image or multiple images\n    if (params.printable.constructor !== Array) {\n      // Create array with one image\n      params.printable = [params.printable];\n    } // Create printable element (container)\n\n\n    params.printableElement = document.createElement('div'); // Create all image elements and append them to the printable container\n\n    params.printable.forEach(function (src) {\n      // Create the image element\n      var img = document.createElement('img');\n      img.setAttribute('style', params.imageStyle); // Set image src with the file url\n\n      img.src = src; // The following block is for Firefox, which for some reason requires the image's src to be fully qualified in\n      // order to print it\n\n      if (_browser__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isFirefox()) {\n        var fullyQualifiedSrc = img.src;\n        img.src = fullyQualifiedSrc;\n      } // Create the image wrapper\n\n\n      var imageWrapper = document.createElement('div'); // Append image to the wrapper element\n\n      imageWrapper.appendChild(img); // Append wrapper to the printable element\n\n      params.printableElement.appendChild(imageWrapper);\n    }); // Check if we are adding a print header\n\n    if (params.header) Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"addHeader\"])(params.printableElement, params); // Print image\n\n    _print__WEBPACK_IMPORTED_MODULE_1__[\"default\"].send(params, printFrame);\n  }\n});\n\n/***/ }),\n\n/***/ \"./src/js/init.js\":\n/*!************************!*\\\n  !*** ./src/js/init.js ***!\n  \\************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser */ \"./src/js/browser.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal */ \"./src/js/modal.js\");\n/* harmony import */ var _pdf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf */ \"./src/js/pdf.js\");\n/* harmony import */ var _html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./html */ \"./src/js/html.js\");\n/* harmony import */ var _raw_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./raw-html */ \"./src/js/raw-html.js\");\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./image */ \"./src/js/image.js\");\n/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./json */ \"./src/js/json.js\");\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n\n\n\n\n\nvar printTypes = ['pdf', 'html', 'image', 'json', 'raw-html'];\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  init: function init() {\n    var params = {\n      printable: null,\n      fallbackPrintable: null,\n      type: 'pdf',\n      header: null,\n      headerStyle: 'font-weight: 300;',\n      maxWidth: 800,\n      properties: null,\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\n      showModal: false,\n      onError: function onError(error) {\n        throw error;\n      },\n      onLoadingStart: null,\n      onLoadingEnd: null,\n      onPrintDialogClose: function onPrintDialogClose() {},\n      onIncompatibleBrowser: function onIncompatibleBrowser() {},\n      modalMessage: 'Retrieving Document...',\n      frameId: 'printJS',\n      printableElement: null,\n      documentTitle: 'Document',\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\n      ignoreElements: [],\n      repeatTableHeader: true,\n      css: null,\n      style: null,\n      scanStyles: true,\n      base64: false,\n      // Deprecated\n      onPdfOpen: null,\n      font: 'TimesNewRoman',\n      font_size: '12pt',\n      honorMarginPadding: true,\n      honorColor: false,\n      imageStyle: 'max-width: 100%;'\n    }; // Check if a printable document or object was supplied\n\n    var args = arguments[0];\n\n    if (args === undefined) {\n      throw new Error('printJS expects at least 1 attribute.');\n    } // Process parameters\n\n\n    switch (_typeof(args)) {\n      case 'string':\n        params.printable = encodeURI(args);\n        params.fallbackPrintable = params.printable;\n        params.type = arguments[1] || params.type;\n        break;\n\n      case 'object':\n        params.printable = args.printable;\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : params.printable;\n        params.fallbackPrintable = params.base64 ? \"data:application/pdf;base64,\".concat(params.fallbackPrintable) : params.fallbackPrintable;\n\n        for (var k in params) {\n          if (k === 'printable' || k === 'fallbackPrintable') continue;\n          params[k] = typeof args[k] !== 'undefined' ? args[k] : params[k];\n        }\n\n        break;\n\n      default:\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + _typeof(args));\n    } // Validate printable\n\n\n    if (!params.printable) throw new Error('Missing printable information.'); // Validate type\n\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase()) === -1) {\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.');\n    } // Check if we are showing a feedback message to the user (useful for large files)\n\n\n    if (params.showModal) _modal__WEBPACK_IMPORTED_MODULE_1__[\"default\"].show(params); // Check for a print start hook function\n\n    if (params.onLoadingStart) params.onLoadingStart(); // To prevent duplication and issues, remove any used printFrame from the DOM\n\n    var usedFrame = document.getElementById(params.frameId);\n    if (usedFrame) usedFrame.parentNode.removeChild(usedFrame); // Create a new iframe for the print job\n\n    var printFrame = document.createElement('iframe');\n\n    if (_browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFirefox()) {\n      // Set the iframe to be is visible on the page (guaranteed by fixed position) but hidden using opacity 0, because\n      // this works in Firefox. The height needs to be sufficient for some part of the document other than the PDF\n      // viewer's toolbar to be visible in the page\n      printFrame.setAttribute('style', 'width: 1px; height: 100px; position: fixed; left: 0; top: 0; opacity: 0; border-width: 0; margin: 0; padding: 0');\n    } else {\n      // Hide the iframe in other browsers\n      printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0');\n    } // Set iframe element id\n\n\n    printFrame.setAttribute('id', params.frameId); // For non pdf printing, pass an html document string to srcdoc (force onload callback)\n\n    if (params.type !== 'pdf') {\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'; // Attach css files\n\n      if (params.css) {\n        // Add support for single file\n        if (!Array.isArray(params.css)) params.css = [params.css]; // Create link tags for each css file\n\n        params.css.forEach(function (file) {\n          printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">';\n        });\n      }\n\n      printFrame.srcdoc += '</head><body></body></html>';\n    } // Check printable type\n\n\n    switch (params.type) {\n      case 'pdf':\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\n        if (_browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isIE()) {\n          try {\n            console.info('Print.js doesn\\'t support PDF printing in Internet Explorer.');\n            var win = window.open(params.fallbackPrintable, '_blank');\n            win.focus();\n            params.onIncompatibleBrowser();\n          } catch (error) {\n            params.onError(error);\n          } finally {\n            // Make sure there is no loading modal opened\n            if (params.showModal) _modal__WEBPACK_IMPORTED_MODULE_1__[\"default\"].close();\n            if (params.onLoadingEnd) params.onLoadingEnd();\n          }\n        } else {\n          _pdf__WEBPACK_IMPORTED_MODULE_2__[\"default\"].print(params, printFrame);\n        }\n\n        break;\n\n      case 'image':\n        _image__WEBPACK_IMPORTED_MODULE_5__[\"default\"].print(params, printFrame);\n        break;\n\n      case 'html':\n        _html__WEBPACK_IMPORTED_MODULE_3__[\"default\"].print(params, printFrame);\n        break;\n\n      case 'raw-html':\n        _raw_html__WEBPACK_IMPORTED_MODULE_4__[\"default\"].print(params, printFrame);\n        break;\n\n      case 'json':\n        _json__WEBPACK_IMPORTED_MODULE_6__[\"default\"].print(params, printFrame);\n        break;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"./src/js/json.js\":\n/*!************************!*\\\n  !*** ./src/js/json.js ***!\n  \\************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ \"./src/js/functions.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./print */ \"./src/js/print.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  print: function print(params, printFrame) {\n    // Check if we received proper data\n    if (_typeof(params.printable) !== 'object') {\n      throw new Error('Invalid javascript data object (JSON).');\n    } // Validate repeatTableHeader\n\n\n    if (typeof params.repeatTableHeader !== 'boolean') {\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).');\n    } // Validate properties\n\n\n    if (!params.properties || !Array.isArray(params.properties)) {\n      throw new Error('Invalid properties array for your JSON data.');\n    } // We will format the property objects to keep the JSON api compatible with older releases\n\n\n    params.properties = params.properties.map(function (property) {\n      return {\n        field: _typeof(property) === 'object' ? property.field : property,\n        displayName: _typeof(property) === 'object' ? property.displayName : property,\n        columnSize: _typeof(property) === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\n      };\n    }); // Create a print container element\n\n    params.printableElement = document.createElement('div'); // Check if we are adding a print header\n\n    if (params.header) {\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"addHeader\"])(params.printableElement, params);\n    } // Build the printable html data\n\n\n    params.printableElement.innerHTML += jsonToHTML(params); // Print the json data\n\n    _print__WEBPACK_IMPORTED_MODULE_1__[\"default\"].send(params, printFrame);\n  }\n});\n\nfunction jsonToHTML(params) {\n  // Get the row and column data\n  var data = params.printable;\n  var properties = params.properties; // Create a html table\n\n  var htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'; // Check if the header should be repeated\n\n  if (params.repeatTableHeader) {\n    htmlData += '<thead>';\n  } // Add the table header row\n\n\n  htmlData += '<tr>'; // Add the table header columns\n\n  for (var a = 0; a < properties.length; a++) {\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"capitalizePrint\"])(properties[a].displayName) + '</th>';\n  } // Add the closing tag for the table header row\n\n\n  htmlData += '</tr>'; // If the table header is marked as repeated, add the closing tag\n\n  if (params.repeatTableHeader) {\n    htmlData += '</thead>';\n  } // Create the table body\n\n\n  htmlData += '<tbody>'; // Add the table data rows\n\n  for (var i = 0; i < data.length; i++) {\n    // Add the row starting tag\n    htmlData += '<tr>'; // Print selected properties only\n\n    for (var n = 0; n < properties.length; n++) {\n      var stringData = data[i]; // Support nested objects\n\n      var property = properties[n].field.split('.');\n\n      if (property.length > 1) {\n        for (var p = 0; p < property.length; p++) {\n          stringData = stringData[property[p]];\n        }\n      } else {\n        stringData = stringData[properties[n].field];\n      } // Add the row contents and styles\n\n\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>';\n    } // Add the row closing tag\n\n\n    htmlData += '</tr>';\n  } // Add the table and body closing tags\n\n\n  htmlData += '</tbody></table>';\n  return htmlData;\n}\n\n/***/ }),\n\n/***/ \"./src/js/modal.js\":\n/*!*************************!*\\\n  !*** ./src/js/modal.js ***!\n  \\*************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nvar Modal = {\n  show: function show(params) {\n    // Build modal\n    var modalStyle = 'font-family:sans-serif; ' + 'display:table; ' + 'text-align:center; ' + 'font-weight:300; ' + 'font-size:30px; ' + 'left:0; top:0;' + 'position:fixed; ' + 'z-index: 9990;' + 'color: #0460B5; ' + 'width: 100%; ' + 'height: 100%; ' + 'background-color:rgba(255,255,255,.9);' + 'transition: opacity .3s ease;'; // Create wrapper\n\n    var printModal = document.createElement('div');\n    printModal.setAttribute('style', modalStyle);\n    printModal.setAttribute('id', 'printJS-Modal'); // Create content div\n\n    var contentDiv = document.createElement('div');\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;'); // Add close button (requires print.css)\n\n    var closeButton = document.createElement('div');\n    closeButton.setAttribute('class', 'printClose');\n    closeButton.setAttribute('id', 'printClose');\n    contentDiv.appendChild(closeButton); // Add spinner (requires print.css)\n\n    var spinner = document.createElement('span');\n    spinner.setAttribute('class', 'printSpinner');\n    contentDiv.appendChild(spinner); // Add message\n\n    var messageNode = document.createTextNode(params.modalMessage);\n    contentDiv.appendChild(messageNode); // Add contentDiv to printModal\n\n    printModal.appendChild(contentDiv); // Append print modal element to document body\n\n    document.getElementsByTagName('body')[0].appendChild(printModal); // Add event listener to close button\n\n    document.getElementById('printClose').addEventListener('click', function () {\n      Modal.close();\n    });\n  },\n  close: function close() {\n    var printModal = document.getElementById('printJS-Modal');\n\n    if (printModal) {\n      printModal.parentNode.removeChild(printModal);\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);\n\n/***/ }),\n\n/***/ \"./src/js/pdf.js\":\n/*!***********************!*\\\n  !*** ./src/js/pdf.js ***!\n  \\***********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./print */ \"./src/js/print.js\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./src/js/functions.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  print: function print(params, printFrame) {\n    // Check if we have base64 data\n    if (params.base64) {\n      var bytesArray = Uint8Array.from(atob(params.printable), function (c) {\n        return c.charCodeAt(0);\n      });\n      createBlobAndPrint(params, printFrame, bytesArray);\n      return;\n    } // Format pdf url\n\n\n    params.printable = /^(blob|http|\\/\\/)/i.test(params.printable) ? params.printable : window.location.origin + (params.printable.charAt(0) !== '/' ? '/' + params.printable : params.printable); // Get the file through a http request (Preload)\n\n    var req = new window.XMLHttpRequest();\n    req.responseType = 'arraybuffer';\n    req.addEventListener('error', function () {\n      Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"cleanUp\"])(params);\n      params.onError(req.statusText, req); // Since we don't have a pdf document available, we will stop the print job\n    });\n    req.addEventListener('load', function () {\n      // Check for errors\n      if ([200, 201].indexOf(req.status) === -1) {\n        Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"cleanUp\"])(params);\n        params.onError(req.statusText, req); // Since we don't have a pdf document available, we will stop the print job\n\n        return;\n      } // Print requested document\n\n\n      createBlobAndPrint(params, printFrame, req.response);\n    });\n    req.open('GET', params.printable, true);\n    req.send();\n  }\n});\n\nfunction createBlobAndPrint(params, printFrame, data) {\n  // Pass response or base64 data to a blob and create a local object url\n  var localPdf = new window.Blob([data], {\n    type: 'application/pdf'\n  });\n  localPdf = window.URL.createObjectURL(localPdf); // Set iframe src with pdf document url\n\n  printFrame.setAttribute('src', localPdf);\n  _print__WEBPACK_IMPORTED_MODULE_0__[\"default\"].send(params, printFrame);\n}\n\n/***/ }),\n\n/***/ \"./src/js/print.js\":\n/*!*************************!*\\\n  !*** ./src/js/print.js ***!\n  \\*************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser */ \"./src/js/browser.js\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./src/js/functions.js\");\n\n\nvar Print = {\n  send: function send(params, printFrame) {\n    // Append iframe element to document body\n    document.getElementsByTagName('body')[0].appendChild(printFrame); // Get iframe element\n\n    var iframeElement = document.getElementById(params.frameId); // Wait for iframe to load all content\n\n    iframeElement.onload = function () {\n      if (params.type === 'pdf') {\n        // Add a delay for Firefox. In my tests, 1000ms was sufficient but 100ms was not\n        if (_browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFirefox()) {\n          setTimeout(function () {\n            return performPrint(iframeElement, params);\n          }, 1000);\n        } else {\n          performPrint(iframeElement, params);\n        }\n\n        return;\n      } // Get iframe element document\n\n\n      var printDocument = iframeElement.contentWindow || iframeElement.contentDocument;\n      if (printDocument.document) printDocument = printDocument.document; // Append printable element to the iframe body\n\n      printDocument.body.appendChild(params.printableElement); // Add custom style\n\n      if (params.type !== 'pdf' && params.style) {\n        // Create style element\n        var style = document.createElement('style');\n        style.innerHTML = params.style; // Append style element to iframe's head\n\n        printDocument.head.appendChild(style);\n      } // If printing images, wait for them to load inside the iframe\n\n\n      var images = printDocument.getElementsByTagName('img');\n\n      if (images.length > 0) {\n        loadIframeImages(Array.from(images)).then(function () {\n          return performPrint(iframeElement, params);\n        });\n      } else {\n        performPrint(iframeElement, params);\n      }\n    };\n  }\n};\n\nfunction performPrint(iframeElement, params) {\n  try {\n    iframeElement.focus(); // If Edge or IE, try catch with execCommand\n\n    if (_browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEdge() || _browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isIE()) {\n      try {\n        iframeElement.contentWindow.document.execCommand('print', false, null);\n      } catch (e) {\n        iframeElement.contentWindow.print();\n      }\n    } else {\n      // Other browsers\n      iframeElement.contentWindow.print();\n    }\n  } catch (error) {\n    params.onError(error);\n  } finally {\n    if (_browser__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFirefox()) {\n      // Move the iframe element off-screen and make it invisible\n      iframeElement.style.visibility = 'hidden';\n      iframeElement.style.left = '-1px';\n    }\n\n    Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"cleanUp\"])(params);\n  }\n}\n\nfunction loadIframeImages(images) {\n  var promises = images.map(function (image) {\n    if (image.src && image.src !== window.location.href) {\n      return loadIframeImage(image);\n    }\n  });\n  return Promise.all(promises);\n}\n\nfunction loadIframeImage(image) {\n  return new Promise(function (resolve) {\n    var pollImage = function pollImage() {\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete ? setTimeout(pollImage, 500) : resolve();\n    };\n\n    pollImage();\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Print);\n\n/***/ }),\n\n/***/ \"./src/js/raw-html.js\":\n/*!****************************!*\\\n  !*** ./src/js/raw-html.js ***!\n  \\****************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./print */ \"./src/js/print.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  print: function print(params, printFrame) {\n    // Create printable element (container)\n    params.printableElement = document.createElement('div');\n    params.printableElement.setAttribute('style', 'width:100%'); // Set our raw html as the printable element inner html content\n\n    params.printableElement.innerHTML = params.printable; // Print html contents\n\n    _print__WEBPACK_IMPORTED_MODULE_0__[\"default\"].send(params, printFrame);\n  }\n});\n\n/***/ }),\n\n/***/ \"./src/sass/index.scss\":\n/*!*****************************!*\\\n  !*** ./src/sass/index.scss ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! ./src/index.js */\"./src/index.js\");\n\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n//# sourceMappingURL=print.map", "import React from 'react';\r\n\r\n\r\nexport const Icons = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n             className=\"bi bi-file-earmark-arrow-down\" viewBox=\"0 0 16 16\">\r\n            <path\r\n                d=\"M8.5 6.5a.5.5 0 0 0-1 0v3.793L6.354 9.146a.5.5 0 1 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0-.708-.708L8.5 10.293V6.5z\"/>\r\n            <path\r\n                d=\"M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zM9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5v2z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\n\r\nexport const PrintIcon = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-printer\"\r\n             viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path\r\n                d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const PlusIcon = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus\"\r\n             viewBox=\"0 0 16 16\">\r\n            <path\r\n                d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const MinusIcon = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-dash\"\r\n             viewBox=\"0 0 16 16\">\r\n            <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const ArrowRepeat = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\"\r\n             className=\"bi bi-arrow-repeat arrowRepeat\" viewBox=\"0 0 16 16\">\r\n            <path\r\n                d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"/>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"/>\r\n        </svg>\r\n    )\r\n}\r\n", "import React from \"react\";\nimport {PdfViewer} from \"./Viewer\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport printJS from \"print-js\";\nimport {PDFViewerMainClassPropsTypes, PDFViewerMainClassStateTypes} from \"./types/PDFViewerTypes\";\nimport {ArrowRepeat, Icons, MinusIcon, PlusIcon, PrintIcon} from \"./Icons/Icons\";\nimport './App.css';\n\nexport default class PDFViewer extends React.Component<PDFViewerMainClassPropsTypes, PDFViewerMainClassStateTypes> {\n    //Создаем приватное поле класса, для div'a в котором отрисовывается pdf документ\n    private mainDiv: React.RefObject<any>;\n\n    constructor({ props }: { props: any }) {\n        super(props);\n        this.state = {\n            numPages: 0, //Количество страниц. По-умолчанию 0\n            numPagesArr: [1], //Поле с количеством страниц. Используется в цикле отрисовки страниц\n            scale: 1.5, //Масшатбирование документа. По-умолчанию 1.5\n            pdf: null, //Поля для pdf документа\n            visibleMenu: false, //Поле для будущего меню, которое будет выезжать как Drawer в AntD\n            isRender: false, //Поле для отрисовки компонента\n            isLoadingError: false,\n        }\n\n        this.mainDiv = React.createRef<HTMLDivElement>(); //Инициализируем поле. Ставим для него React.Ref ссылку.\n\n\n        //Воркер для корректной работы PDFViewer **Необходимо будет перенести в локальный репозиторий**\n        pdfjsLib.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjsLib.version}/legacy/build/pdf.worker.min.js`;\n    }\n\n\n    componentDidMount() {\n        //Получаем cMapUrl для корректной работы PDFViewer\n        const cMapUrl = `//unpkg.com/pdfjs-dist@${pdfjsLib.version}/cmaps`\n        const self = this;\n\n        //Получаем pdf документ\n        const loadingTask = pdfjsLib.getDocument({url: this.props.link, cMapUrl: cMapUrl, cMapPacked: true})\n        loadingTask.promise\n            .then(loadedPdf => {\n                //Создаем массив с коллекцией страниц,\n                //Используется для отрисовки в JSX методом map\n                let numPagesArr:Array<number> = [];\n\n                //Пробегаемся циклом и заполняем массив numPagesArr номерами страниц\n                for(let i = 1; i <= loadedPdf.numPages; i++){\n                    numPagesArr.push(i)\n                }\n\n                //Заполняем state текущими значениями, где:\n                //pdf - документа\n                //numPages - количество страниц\n                //numPagesArr - массив с коллекцией страниц\n                this.setState({pdf: loadedPdf, numPages: loadedPdf.numPages, numPagesArr: numPagesArr}, () => {\n                    //После того как все значения улетели в state, (Асинхронно), вешаем прослушку  колеса мыши\n                    //на div в котором будет отрисовываться документа и вызываем метод onWheelEvent\n                    this.mainDiv.current?.addEventListener('wheel', (event: WheelEvent) => {\n                        this.onWheelEvent(event)\n                    })\n                })\n            }, function (reason) {\n                self.setState({isLoadingError: true})\n                console.error(reason);\n            });\n        loadingTask.promise.catch(error => {\n            self.setState({isLoadingError: true})\n            console.log(error)\n        })\n    }\n\n\n\n    onWheelEvent = (event:WheelEvent) => {\n        if(event.ctrlKey){\n            event.preventDefault();\n            if(event.deltaY < 0){\n                this.increaseScale();\n            } else {\n                this.reduceScale();\n            }\n        }\n    }\n\n\n    increaseScale = () => {\n        //@ts-ignore\n        this.setState((state, props) => {\n            if(state.scale + 0.2 >= 3){\n                return {scale: state.scale}\n            }\n            return {scale: state.scale + 0.2}\n        })\n    }\n\n    reduceScale = () => {\n        //@ts-ignore\n        this.setState((state, props) => {\n            if(state.scale - 0.2 <= 0){\n                return {scale: state.scale}\n            }\n            return {scale: state.scale - 0.2}\n        }, () => {\n            this.render();\n        })\n    }\n\n\n    printDocument = async () => {\n        //@ts-ignore\n        const data = await this.state.pdf!.getData();\n        const blob = new Blob([data], {type: 'application/pdf'});\n        printJS(URL.createObjectURL(blob))\n    }\n\n    downloadDocument = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Authorization': `${localStorage.getItem('token')}`\n            }\n        };\n\n        //@ts-ignore\n        fetch(this.props.link, requestOptions)\n            .then(response => response.blob())\n            .then(blob => {\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.style.display = 'none';\n                a.href = url;\n                //@ts-ignore\n                a.download = this.props.link.replace(`${process.env.REACT_APP_BACK_HOST}/media/pdf/`, '');\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    loadingDocument = () => {\n        return(\n            <div className=\"loadingPage\">\n                <div className=\"loadingPage__div\">\n                    <ArrowRepeat />\n                    <p>Loading</p>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const {pdf, scale, isRender, isLoadingError} = this.state;\n\n        if(!pdf && !isLoadingError){\n            return (\n                this.loadingDocument()\n            )\n        } else if(!pdf && isLoadingError){\n            return (\n                <div>\n                    Произошла проблема при загрузке документа. Пожалуйста сообщите нам об этом\n                </div>\n            )\n        } else {\n            return(\n                <div>\n                    <div className=\"pdfViewerTools\" style={{position: 'fixed'}}>\n                        <button\n                            // shape=\"circle\"\n                            // icon={<ZoomInOutlined/>}\n                            onClick={() => this.increaseScale()}\n                            className={\"panelButton\"}\n                        >\n                            <PlusIcon />\n                        </button>\n                        <button\n                            // shape=\"circle\"\n                            // icon={<ZoomOutOutlined/>}\n                            onClick={() => this.reduceScale()}\n                            className={\"panelButton\"}\n                        >\n                            <MinusIcon />\n                        </button>\n                        <button\n                            // shape=\"circle\"\n                            // icon={<PrintIcon/>}\n                            onClick={() => this.printDocument()}\n                            className={\"panelButton\"}\n                        >\n                            <PrintIcon />\n                        </button>\n                        <button\n                            // shape=\"circle\"\n                            // icon={<Icons/>}\n                            onClick={() => this.downloadDocument()}\n                            className={\"panelButton\"}\n                        >\n                            <Icons />\n                        </button>\n                        <div className=\"scale\">\n                            {Math.round(scale * 33)}%/100%\n                        </div>\n                    </div>\n                    {!isRender &&\n                    <div ref={this.mainDiv} style={{minHeight: '100vh'}}>\n                        {this.state.numPagesArr.map((i) => (\n                            <div style={{marginBottom: 20}}>\n                                <PdfViewer\n                                    key={i}\n                                    page={i}\n                                    pdf={this.state.pdf}\n                                    scale={scale}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    }\n                </div>\n\n            )\n        }\n\n    }\n}\n"],
  "mappings": "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",
  "names": ["exports", "module", "exports", "module", "_util", "__w_pdfjs_require__", "DEFAULT_LINK_REL", "SVG_NS", "constructor", "unreachable", "create", "reset", "canvasAndContext", "width", "height", "destroy", "ownerDocument", "globalThis", "canvas", "context", "baseUrl", "isCompressed", "fetch", "url", "compressionType", "CMapCompressionType", "reason", "_fetchData", "isFetchSupported", "isValidFetchUrl", "document", "response", "cMapData", "stringToBytes", "request", "XMLHttpRequest", "resolve", "reject", "assert", "svg", "createElement", "offsetX", "offsetY", "dontFlip", "centerX", "viewBox", "centerY", "rotation", "rotateA", "rotateB", "rotateC", "rotateD", "offsetCanvasX", "Math", "offsetCanvasY", "clone", "scale", "convertToViewportPoint", "convertToViewportRectangle", "topLeft", "rect", "bottomRight", "convertToPdfPoint", "LinkTarget", "NONE", "SELF", "BLANK", "PARENT", "TOP", "enabled", "urlNullRemoved", "removeNullCharacters", "link", "targetStr", "ii", "i", "anchor", "query", "end", "defaultFilename", "isDataScheme", "warn", "reURI", "reFilename", "splitURI", "suggestedFilename", "decodeURIComponent", "Object", "time", "name", "Date", "timeEnd", "start", "toString", "outBuf", "longest", "duration", "Response", "protocol", "removeScriptElement", "script", "console", "toDateObject", "isString", "pdfDateStringRegex", "matches", "year", "parseInt", "month", "day", "hour", "minute", "second", "universalTimeRelation", "offsetHour", "offsetMinute", "IDENTITY_MATRIX", "FONT_IDENTITY_MATRIX", "PermissionFlag", "PRINT", "MODIFY_CONTENTS", "COPY", "MODIFY_ANNOTATIONS", "FILL_INTERACTIVE_FORMS", "COPY_FOR_ACCESSIBILITY", "ASSEMBLE", "PRINT_HIGH_QUALITY", "TextRenderingMode", "FILL", "STROKE", "FILL_STROKE", "INVISIBLE", "FILL_ADD_TO_PATH", "STROKE_ADD_TO_PATH", "FILL_STROKE_ADD_TO_PATH", "ADD_TO_PATH", "FILL_STROKE_MASK", "ADD_TO_PATH_FLAG", "ImageKind", "GRAYSCALE_1BPP", "RGB_24BPP", "RGBA_32BPP", "AnnotationType", "TEXT", "LINK", "FREETEXT", "LINE", "SQUARE", "CIRCLE", "POLYGON", "POLYLINE", "HIGHLIGHT", "UNDERLINE", "SQUIGGLY", "STRIKEOUT", "STAMP", "CARET", "INK", "POPUP", "FILEATTACHMENT", "SOUND", "MOVIE", "WIDGET", "SCREEN", "PRINTERMARK", "TRAPNET", "WATERMARK", "THREED", "REDACT", "AnnotationStateModelType", "MARKED", "REVIEW", "AnnotationMarkedState", "UNMARKED", "AnnotationReviewState", "ACCEPTED", "REJECTED", "CANCELLED", "COMPLETED", "AnnotationReplyType", "GROUP", "REPLY", "AnnotationFlag", "HIDDEN", "NOZOOM", "NOROTATE", "NOVIEW", "READONLY", "LOCKED", "TOGGLENOVIEW", "LOCKEDCONTENTS", "AnnotationFieldFlag", "REQUIRED", "NOEXPORT", "MULTILINE", "PASSWORD", "NOTOGGLETOOFF", "RADIO", "PUSHBUTTON", "COMBO", "EDIT", "SORT", "FILESELECT", "MULTISELECT", "DONOTSPELLCHECK", "DONOTSCROLL", "COMB", "RICHTEXT", "RADIOSINUNISON", "COMMITONSELCHANGE", "AnnotationBorderStyleType", "SOLID", "DASHED", "BEVELED", "INSET", "AnnotationActionEventType", "E", "X", "D", "U", "Fo", "Bl", "PO", "PC", "PV", "PI", "K", "F", "V", "C", "DocumentActionEventType", "WC", "WS", "DS", "WP", "DP", "PageActionEventType", "O", "StreamType", "UNKNOWN", "FLATE", "LZW", "DCT", "JPX", "JBIG", "A85", "AHX", "CCF", "RLX", "FontType", "TYPE1", "TYPE1C", "CIDFONTTYPE0", "CIDFONTTYPE0C", "TRUETYPE", "CIDFONTTYPE2", "TYPE3", "OPENTYPE", "TYPE0", "MMTYPE1", "VerbosityLevel", "ERRORS", "WARNINGS", "INFOS", "BINARY", "STREAM", "OPS", "dependency", "setLineWidth", "setLineCap", "setLineJoin", "setMiterLimit", "setDash", "setRenderingIntent", "setFlatness", "setGState", "save", "restore", "transform", "moveTo", "lineTo", "curveTo", "curveTo2", "curveTo3", "closePath", "rectangle", "stroke", "closeStroke", "fill", "eoFill", "fillStroke", "eoFillStroke", "closeFillStroke", "closeEOFillStroke", "endPath", "clip", "eoClip", "beginText", "endText", "setCharSpacing", "setWordSpacing", "setHScale", "setLeading", "setFont", "setTextRenderingMode", "setTextRise", "moveText", "setLeadingMoveText", "setTextMatrix", "nextLine", "showText", "showSpacedText", "nextLineShowText", "nextLineSetSpacingShowText", "setCharWidth", "setCharWidthAndBounds", "setStrokeColorSpace", "setFillColorSpace", "setStrokeColor", "setStrokeColorN", "setFillColor", "setFillColorN", "setStrokeGray", "setFillGray", "setStrokeRGBColor", "setFillRGBColor", "setStrokeCMYKColor", "setFillCMYKColor", "shadingFill", "beginInlineImage", "beginImageData", "endInlineImage", "paintXObject", "markPoint", "markPointProps", "beginMarkedContent", "beginMarkedContentProps", "endMarkedContent", "beginCompat", "endCompat", "paintFormXObjectBegin", "paintFormXObjectEnd", "beginGroup", "endGroup", "beginAnnotations", "endAnnotations", "beginAnnotation", "endAnnotation", "paintJpegXObject", "paintImageMaskXObject", "paintImageMaskXObjectGroup", "paintImageXObject", "paintInlineImageXObject", "paintInlineImageXObjectGroup", "paintImageXObjectRepeat", "paintImageMaskXObjectRepeat", "paintSolidColorImageMask", "constructPath", "UNSUPPORTED_FEATURES", "unknown", "forms", "javaScript", "signatures", "smask", "shadingPattern", "font", "errorTilingPattern", "errorExtGState", "errorXObject", "errorFontLoadType3", "errorFontState", "errorFontMissing", "errorFontTranslate", "errorColorSpace", "errorOperatorList", "errorFontToUnicode", "errorFontLoadNative", "errorFontBuildPath", "errorFontGetPath", "errorMarkedContent", "PasswordResponses", "NEED_PASSWORD", "INCORRECT_PASSWORD", "verbosity", "Number", "base", "e", "other", "absoluteUrl", "_isValidProtocol", "enumerable", "configurable", "writable", "BaseException", "NullCharactersRegExp", "str", "bytes", "length", "MAX_ARGUMENT_COUNT", "String", "strBuf", "chunkEnd", "chunk", "arr", "resultLength", "arrayByteLength", "pos", "data", "item", "itemLength", "value", "obj", "buffer8", "view32", "IsLittleEndianCached", "shadow", "isLittleEndian", "IsEvalSupportedCached", "isEvalSupported", "hexNumbers", "Array", "n", "makeHexColor", "r", "m1", "m2", "applyTransform", "p", "m", "xt", "yt", "applyInverseTransform", "d", "getAxialAlignedBoundingBox", "p1", "Util", "p2", "p3", "p4", "inverseTransform", "apply3dTransform", "v", "singularValueDecompose2dScale", "transpose", "a", "b", "c", "first", "sx", "sy", "normalizeRect", "intersect", "orderedX", "rect1", "rect2", "orderedY", "result", "PDFStringTranslateTable", "code", "match", "buf", "char", "escape", "unescape", "encodeURIComponent", "arr1", "arr2", "date", "buffer", "capability", "isSettled", "get", "contentType", "forceDataSchema", "URL", "type", "digits", "b1", "b2", "b3", "d1", "d2", "d3", "d4", "_is_node", "isNodeJS", "process", "DEFAULT_RANGE_CHUNK_SIZE", "RENDERING_CANCELLED_TIMEOUT", "DefaultCanvasFactory", "DefaultCMapReaderFactory", "createPDFNetworkStream", "task", "src", "source", "isArrayBuffer", "range", "params", "rangeTransport", "worker", "window", "isNaN", "apiCompatibilityParams", "setVerbosityLevel", "workerParams", "port", "GlobalWorkerOptions", "PDFWorker", "docId", "workerIdPromise", "_fetchDocument", "networkStreamPromise", "networkStream", "initialData", "progressiveDone", "contentDispositionFilename", "disableRange", "disableStream", "httpHeaders", "withCredentials", "rangeChunkSize", "messageHandler", "transport", "Promise", "pdfDataRangeTransport", "apiVersion", "password", "disableAutoFetch", "maxImageSize", "disableFontFace", "postMessageTransfers", "docBaseUrl", "ignoreErrors", "fontExtraProperties", "enableXfa", "PDFDocumentLoadingTask", "nextDocumentId", "promise", "transportDestroyed", "addRangeListener", "addProgressListener", "addProgressiveReadListener", "addProgressiveDoneListener", "onDataRange", "listener", "onDataProgress", "onDataProgressiveRead", "onDataProgressiveDone", "transportReady", "requestDataRange", "abort", "annotationStorage", "numPages", "fingerprint", "isPureXfa", "getPage", "getPageIndex", "getDestinations", "getDestination", "getPageLabels", "getPageLayout", "getPageMode", "getViewerPreferences", "getOpenAction", "getAttachments", "getJavaScript", "getJSActions", "getOutline", "getOptionalContentConfig", "getPermissions", "getMetadata", "getMarkInfo", "getData", "getDownloadInfo", "getStats", "cleanup", "keepLoadedFonts", "loadingParams", "loadingTask", "saveDocument", "arguments", "deprecated", "getFieldObjects", "hasJSActions", "getCalculationOrderIds", "pdfBug", "pageNumber", "rotate", "ref", "userUnit", "view", "getViewport", "getAnnotations", "intent", "getXfa", "render", "renderInteractiveForms", "imageLayer", "canvasFactory", "background", "includeAnnotationStorage", "optionalContentConfigPromise", "renderingIntent", "intentState", "clearTimeout", "canvasFactoryInstance", "fnArray", "argsArray", "lastChunk", "pageIndex", "complete", "error", "internalRenderTask", "callback", "objs", "commonObjs", "operatorList", "useRequestAnimationFrame", "renderTask", "getOperatorList", "opListTask", "streamTextContent", "normalizeWhitespace", "disableCombineTextItems", "includeMarkedContent", "TEXT_CONTENT_CHUNK_SIZE", "combineTextItems", "highWaterMark", "size", "textContent", "getTextContent", "readableStream", "reader", "pump", "items", "styles", "getStructTree", "_destroy", "waitOn", "force", "resetStats", "_tryCleanup", "renderTasks", "_startRenderPage", "_renderPageChunk", "operatorListChunk", "_pumpOperatorList", "args", "_abortOperatorList", "curIntentState", "stats", "postMessage", "cloned", "transfers", "cloneValue", "desc", "event", "addEventListener", "removeEventListener", "terminate", "pdfWorkerPorts", "isWorkerDisabled", "nextFakeWorkerId", "fallbackWorkerSrc", "pdfjsFilePath", "mainWorkerMessageHandler", "fakeWorkerCapability", "loader", "getMainThreadWorkerMessageHandler", "eval", "getWorkerSrc", "loadScript", "wrapper", "_initializeFromPort", "_initialize", "workerSrc", "isSameOrigin", "createCDNWrapper", "terminateEarly", "onWorkerError", "sendTest", "testObj", "info", "_setupFakeWorker", "setupFakeWorkerGlobal", "WorkerMessageHandler", "id", "workerHandler", "fromPort", "onUnsupportedFeature", "page", "terminated", "setupMessageHandler", "evt", "loaded", "total", "sink", "readyReason", "headersCapability", "fullReader", "isStreamingSupported", "isRangeSupported", "contentLength", "rangeReader", "pdfInfo", "ex", "msg", "exception", "updatePassword", "exportedError", "exportedData", "fontRegistry", "registerFont", "pageProxy", "MAX_IMAGE_SIZE_TO_STORE", "imageData", "fetched", "builtInCMap", "_onUnsupportedFeature", "pageInfo", "filename", "getDocJSActions", "getPageJSActions", "getPageXfa", "results", "metadata", "startCleanup", "cleanupSuccessful", "_ensureObj", "resolved", "has", "clear", "cancel", "InternalRenderTask", "canvasInRendering", "completed", "initializeGraphics", "transparency", "operatorListChanged", "_continue", "_scheduleNext", "_next", "version", "build", "addNativeFontFace", "insertRule", "styleElement", "styleSheet", "bind", "nativeFontFace", "featureId", "rule", "_queueLoadingCallback", "isFontLoadingAPISupported", "isSyncFontLoadingSupported", "_loadTestFont", "_prepareFontLoadEvent", "FontLoader", "requests", "nextRequestId", "supported", "navigator", "otherRequest", "setTimeout", "done", "getLoadTestFont", "atob", "offset", "s", "chunk1", "chunk2", "ctx", "called", "isFontReady", "loadTestFontId", "COMMENT_OFFSET", "spliceString", "CFF_CHECKSUM_OFFSET", "XXXX_VALUE", "checksum", "int32", "string32", "btoa", "names", "div", "span", "translatedData", "createNativeFontFace", "css", "weight", "createFontFaceRule", "bytesToString", "getPathGenerator", "cmds", "jsBuf", "current", "_display_utils", "NodeCanvasFactory", "NodeCMapReaderFactory", "Canvas", "__non_webpack_require__", "fs", "getValue", "setValue", "modified", "getAll", "objectFromMap", "_setModified", "resetModified", "serializable", "compatibilityParams", "MIN_FONT_SIZE", "MAX_FONT_SIZE", "MAX_GROUP_SIZE", "COMPILE_TYPE3_GLYPHS", "MAX_SIZE_TO_COMPILE", "FULL_CHUNK_HEIGHT", "LINEWIDTH_SCALE_FACTOR", "set", "f", "ad_bc", "bc_ad", "old", "prev", "cosValue", "sinValue", "getCanvas", "canvasEntry", "addContextCurrentTransform", "POINT_TO_PROCESS_LIMIT", "POINT_TYPES", "imgData", "width1", "points", "lineSize", "data0", "elem", "mask", "count", "j", "j0", "sum", "steps", "outlines", "coords", "p0", "step", "pp", "drawOutline", "k", "kk", "o", "l", "ll", "setCurrentPoint", "CanvasGraphics", "EXECUTION_TIME", "EXECUTION_STEPS", "transferMaps", "partialChunkHeight", "fullChunks", "totalChunks", "chunkImgData", "srcPos", "dest", "transferMapRed", "transferMapGreen", "transferMapBlue", "transferMapGray", "srcLength", "dest32", "dest32DataLength", "fullSrcDiff", "white", "black", "thisChunkHeight", "destPos", "srcDiff", "kEnd", "kEndUnrolled", "srcByte", "hasTransferMaps", "elemsInThisChunk", "properties", "property", "sourceCtx", "destCtx", "alpha", "alpha_", "r0", "g0", "b0", "maskData", "transferMap", "layerData", "y", "hasBackdrop", "backdrop", "subtype", "composeFn", "PIXELS_TO_PROCESS", "chunkSize", "row", "chunkHeight", "maskCtx", "layerCtx", "composeSMaskBackdrop", "genericComposeSMask", "LINE_CAP_STYLES", "LINE_JOIN_STYLES", "NORMAL_CLIP", "EO_CLIP", "beginDrawing", "transparentCanvas", "resetCtxToDefault", "viewport", "executeOperatorList", "executionStartIdx", "argsArrayLen", "chunkOperations", "endTime", "stepper", "fnId", "objsPool", "depObjId", "continueCallback", "endDrawing", "states", "state", "key", "beginSMaskGroup", "activeSMask", "drawnWidth", "drawnHeight", "cacheId", "scratchCanvas", "currentCtx", "currentTransform", "groupCtx", "copyCtxState", "suspendSMaskGroup", "composeSMask", "deltaTransform", "resumeSMaskGroup", "endSMaskGroup", "x", "ops", "xw", "yh", "consumePath", "strokeColor", "lineWidth", "fillColor", "isPatternFill", "needRestore", "paths", "path", "fontObj", "bold", "italic", "typeface", "browserFontSize", "paintChar", "textRenderingMode", "fontSize", "fillStrokeMode", "isAddToPathSet", "patternFill", "addToPath", "isFontSubpixelAAEnabled", "fontSizeScale", "charSpacing", "wordSpacing", "fontDirection", "textHScale", "glyphsLength", "glyphs", "vertical", "spacingDir", "defaultVMetrics", "widthAdvanceScale", "simpleFillText", "pattern", "patternTransform", "resetLineWidthToOne", "glyph", "isNum", "restoreNeeded", "spacing", "character", "accent", "vmetric", "vx", "vy", "scaledX", "scaledY", "measuredWidth", "characterScaleX", "scaledAccentX", "scaledAccentY", "charWidth", "showType3Text", "fontMatrix", "isTextInvisible", "spacingLength", "transformed", "urx", "ury", "getColorN_Pattern", "IR", "color", "baseTransform", "canvasGraphicsFactory", "createCanvasGraphics", "getShadingPattern", "inv", "bl", "br", "ul", "ur", "x0", "y0", "x1", "y1", "matrix", "bbox", "group", "bounds", "canvasBounds", "scaleX", "scaleY", "startTransformInverse", "img", "maskCanvas", "putBinaryImageMask", "skewX", "skewY", "positions", "images", "image", "objId", "map", "w", "h", "widthScale", "heightScale", "imgToPaint", "tmpCanvas", "tmpCtx", "putBinaryImageData", "paintWidth", "paintHeight", "tmpCanvasId", "newWidth", "newHeight", "position", "left", "top", "entry", "visible", "tag", "getSinglePixelWidth", "absDet", "sqNorm1", "sqNorm2", "pixelHeight", "getCanvasPosition", "isContentVisible", "svgElement", "region", "getPattern", "owner", "applyBoundingBox", "grad", "colorStop", "createMatrix", "colors", "rowSize", "tmp", "c1", "c2", "c3", "x2", "y2", "x3", "y3", "c1r", "c1g", "c1b", "c2r", "c2g", "c2b", "c3r", "c3g", "c3b", "minY", "maxY", "xa", "car", "cag", "cab", "xb", "cbr", "cbg", "cbb", "x1_", "x2_", "ps", "figure", "cs", "verticesPerRow", "rows", "cols", "q", "drawTriangle", "_createMeshCanvas", "EXPECTED_SCALE", "MAX_PATTERN_SIZE", "BORDER_SIZE", "boundsWidth", "boundsHeight", "combinedScale", "paddedWidth", "paddedHeight", "cachedCanvases", "backgroundColor", "drawFigure", "matrixScale", "temporaryPatternCanvas", "PaintType", "COLORED", "UNCOLORED", "createPatternCanvas", "xstep", "ystep", "paintType", "tilingType", "curMatrixScale", "dimx", "dimy", "graphics", "getSizeAndScale", "maxSize", "TilingPattern", "clipBbox", "bboxWidth", "bboxHeight", "setFillAndStrokeStyleToContext", "cssColor", "domMatrix", "CallbackKind", "DATA", "ERROR", "StreamKind", "CANCEL", "CANCEL_COMPLETE", "CLOSE", "ENQUEUE", "PULL", "PULL_COMPLETE", "START_COMPLETE", "callbackId", "wrapReason", "action", "cbSourceName", "cbTargetName", "comObj", "sourceName", "targetName", "on", "ah", "send", "sendWithPromise", "sendWithStream", "streamId", "controller", "startCapability", "startCall", "pullCall", "cancelCall", "isClosed", "desiredSize", "pull", "pullCapability", "stream", "cancelCapability", "_createStreamSink", "self", "streamSink", "enqueue", "lastDesiredSize", "close", "sinkCapability", "onPull", "onCancel", "isCancelled", "ready", "success", "_processStreamMessage", "_deleteStreamController", "_postMessage", "getRaw", "_evaluateVisibilityExpression", "array", "operator", "element", "isVisible", "setVisibility", "getOrder", "getGroups", "getGroup", "_onReceiveData", "found", "_progressiveDataLength", "_onProgress", "firstReader", "_onProgressiveDone", "_removeRangeReader", "getFullReader", "queuedChunks", "getRangeReader", "cancelAllRequests", "isPdfFile", "_enqueue", "requestCapability", "headersReady", "read", "requestsCapability", "_annotation_storage", "parameters", "fieldType", "isRenderable", "ignoreBorder", "createQuadrilaterals", "_createContainer", "container", "horizontalRadius", "verticalRadius", "radius", "_createQuadrilaterals", "quadrilaterals", "savedRect", "quadPoint", "_createPopup", "trigger", "popupElement", "title", "modificationDate", "contents", "hideWrapper", "popup", "_renderQuadrilaterals", "quadrilateral", "addLinkAttributes", "target", "linkService", "rel", "linkElement", "index", "_bindLink", "destination", "_bindNamedAction", "_bindJSAction", "jsName", "detail", "JSON", "_getKeyModifier", "_setEventListener", "baseName", "valueGetter", "shift", "modifier", "_setEventListeners", "eventName", "_dispatchEventFromSandbox", "setColor", "ColorConverters", "commonActions", "display", "hidden", "print", "focus", "preventScroll", "userName", "readonly", "required", "bgColor", "fgColor", "textColor", "borderColor", "jsEvent", "actions", "setPropertyOnSiblings", "storage", "storedData", "valueAsString", "elementData", "userValue", "formattedValue", "beforeInputSelectionRange", "beforeInputValue", "blurListener", "selRange", "selStart", "selEnd", "commitKey", "_a", "willCommit", "_blurListener", "change", "fieldWidth", "combWidth", "_setTextStyle", "TEXT_ALIGNMENT", "style", "fontColor", "checkbox", "radio", "pdfButtonValue", "checked", "radioId", "selectElement", "optionElement", "option", "isExport", "options", "getItems", "displayValue", "exportValue", "values", "multipleSelection", "remove", "insert", "indices", "editable", "changeEx", "keyDown", "IGNORE_TYPES", "selector", "parentElements", "popupLeft", "popupTop", "BACKGROUND_ENLIGHT", "g", "dateObject", "PDFDateString", "_formatContents", "lines", "line", "_toggle", "_show", "pin", "_hide", "unpin", "borderWidth", "square", "circle", "coordinate", "polyline", "getFilenameFromUrl", "stringToPDFString", "_download", "sortedAnnotations", "popupAnnotations", "layer", "downloadManager", "imageResourcesPath", "svgFactory", "enableScripting", "mouseState", "isDown", "rendered", "update", "elements", "CMYK_G", "G_CMYK", "G_RGB", "G_HTML", "G", "makeColorComp", "RGB_G", "RGB_HTML", "R", "B", "T_HTML", "CMYK_RGB", "CMYK_HTML", "RGB_CMYK", "MAX_TEXT_DIVS_TO_RENDER", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_ASCENT", "ascentCache", "AllWhitespaceRegexp", "cachedAscent", "metrics", "ascent", "descent", "ratio", "pixels", "textDiv", "textDivProperties", "angle", "canvasWidth", "hasText", "geom", "hasEOL", "originalTransform", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "tx", "fontHeight", "fontAscent", "getAscent", "shouldScaleText", "absScaleX", "absScaleY", "angleCos", "angleSin", "divWidth", "divHeight", "right", "bottom", "textDivs", "textDivsLength", "t", "ts", "expanded", "expandBounds", "divProperties", "jj", "boxScale", "findPositiveMin", "box", "x1New", "x2New", "expandBoundsLTR", "boxes", "fakeBoundary", "horizon", "boundary", "maxXNew", "horizonPart", "affectedBoundary", "xNew", "changedHorizon", "lastBoundary", "useBoundary", "used", "textContentItemsStr", "_processItems", "len", "parent", "appendText", "_layoutText", "fontFamily", "_render", "timeout", "styleCache", "textItems", "textStyles", "expandTextDivs", "expandDivs", "expand", "transformBuf", "paddingBuf", "divProps", "renderParameters", "textContentStream", "enhanceTextSelection", "SVGGraphics", "opTree", "opListElement", "fn", "pf", "SVG_DEFAULTS", "fontStyle", "fontWeight", "XML_NS", "XLINK_NS", "convertImgDataToPng", "PNG_HEADER", "CHUNK_WRAPPER_SIZE", "crcTable", "crc", "body", "crc32", "deflateSyncUncompressed", "input", "Buffer", "output", "level", "literals", "maxBlockLength", "deflateBlocks", "idat", "pi", "adler", "adler32", "colorType", "bitDepth", "offsetLiterals", "offsetBytes", "kind", "ihdr", "deflateSync", "pngLength", "writePngChunk", "createObjectURL", "encode", "clipCount", "maskCount", "shadingCount", "loadDependencies", "transformMatrix", "getSVG", "convertOpList", "operatorIdMapping", "opList", "opListToTree", "executeOpTree", "opTreeElement", "lineWidthScale", "textMatrix", "pm", "addFontStyle", "details", "setStrokeAlpha", "setFillAlpha", "_makeColorN_Pattern", "_makeTilingPattern", "tilingId", "txstep", "tystep", "tiling", "tx1", "ty1", "_makeShadingPattern", "shadingId", "colorStops", "point0", "point1", "gradient", "focalPoint", "circlePoint", "focalRadius", "circleRadius", "stop", "op", "clipId", "clipPath", "clipElement", "_setStrokeAttributes", "dashArray", "imgSrc", "cliprect", "imgEl", "definitions", "rootGroup", "_ensureClipGroup", "clipGroup", "_ensureTransformGroup", "setupStorage", "html", "setAttributes", "attributes", "root", "rootHtml", "stack", "rootDiv", "coeffs", "child", "childHtml", "http", "https", "fileUriRegex", "parsedUrl", "parseUrl", "_error", "_setReadableStream", "auth", "host", "method", "handleResponse", "getResponseHeader", "isHttp", "suggestedLength", "extractFilenameFromHeader", "createRequestOptions", "stat", "returnValues", "allowRangeRequests", "contentEncoding", "contentDisposition", "getFilenameFromContentDispositionHeader", "status", "needsEncodingFixup", "toParamRegExp", "rfc2616unquote", "rfc5987decode", "rfc2047decode", "fixupEncoding", "rfc2231getparam", "decoder", "fatal", "textdecode", "iter", "parts", "part", "quotindex", "encodingend", "extvalue", "encoding", "langvalue", "text", "OK_RESPONSE", "PARTIAL_CONTENT_RESPONSE", "xhr", "requestRange", "listeners", "requestFull", "xhrId", "pendingRequest", "onProgress", "onStateChange", "xhrStatus", "ok_response_on_range_request", "getArrayBuffer", "rangeHeader", "begin", "getRequestXhr", "isPendingRequest", "abortRequest", "_onRangeRequestReaderClosed", "onHeadersReceived", "onDone", "onError", "manager", "_onHeadersReceived", "fullRequestXhrId", "fullRequestXhr", "_onDone", "_onError", "createResponseStatusError", "_close", "signal", "abortController", "mode", "credentials", "redirect", "headers", "createHeaders", "createFetchOptions", "validateResponseStatus", "module", "_api_compatibility", "_worker_options", "pdfjsVersion", "pdfjsBuild", "require", "PDFNodeStream", "setPDFNetworkStreamFactory", "PDFNetworkStream", "PDFFetchStream", "PdfViewer", "pdf", "page", "scale", "useEffect", "renderPage", "pageNum", "div", "document", "getElementById", "canvasRef", "createElement", "className", "style", "display", "addEventListener", "event", "canvas", "buttons", "cursor", "el", "querySelector", "scrollLeft", "movementX", "scrollTop", "movementY", "getPage", "then", "viewport", "getViewport", "width", "Math", "floor", "height", "renderContext", "canvasContext", "getContext", "children", "length", "appendChild", "render", "promise", "removeChild", "React", "id", "e", "t", "factory", "window", "modules", "installedModules", "__webpack_require__", "moduleId", "exports", "module", "i", "l", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "prototype", "hasOwnProperty", "p", "s", "./src/index.js", "__webpack_exports__", "printJS", "init", "./src/js/browser.js", "Browser", "isFirefox", "InstallTrigger", "isIE", "navigator", "userAgent", "indexOf", "documentMode", "isEdge", "StyleMedia", "isChrome", "context", "arguments", "chrome", "isSafari", "toString", "HTMLElement", "toLowerCase", "isIOSChrome", "./src/js/functions.js", "addWrapper", "capitalizePrint", "collectStyles", "addHeader", "cleanUp", "isRawHTML", "_modal__WEBPACK_IMPORTED_MODULE_0__", "_browser__WEBPACK_IMPORTED_MODULE_1__", "_typeof", "obj", "iterator", "constructor", "htmlData", "params", "font", "font_size", "charAt", "toUpperCase", "slice", "element", "elementStyle", "styles", "defaultView", "getComputedStyle", "targetStyles", "targetStyle", "targetStylesMatch", "getPropertyValue", "maxWidth", "printElement", "headerContainer", "header", "innerHTML", "headerElement", "headerNode", "createTextNode", "setAttribute", "headerStyle", "insertBefore", "childNodes", "showModal", "close", "onLoadingEnd", "onLoadingStart", "URL", "revokeObjectURL", "printable", "handler", "removeEventListener", "onPrintDialogClose", "iframe", "frameId", "remove", "raw", "RegExp", "test", "./src/js/html.js", "_functions__WEBPACK_IMPORTED_MODULE_0__", "_print__WEBPACK_IMPORTED_MODULE_1__", "print", "printFrame", "nodeType", "printableElement", "cloneElement", "clone", "cloneNode", "childNodesArray", "Array", "ignoreElements", "clonedChild", "scanStyles", "tagName", "drawImage", "send", "console", "error", "./src/js/image.js", "_browser__WEBPACK_IMPORTED_MODULE_2__", "forEach", "src", "img", "imageStyle", "imageWrapper", "./src/js/init.js", "_browser__WEBPACK_IMPORTED_MODULE_0__", "_modal__WEBPACK_IMPORTED_MODULE_1__", "_pdf__WEBPACK_IMPORTED_MODULE_2__", "_html__WEBPACK_IMPORTED_MODULE_3__", "_raw_html__WEBPACK_IMPORTED_MODULE_4__", "_image__WEBPACK_IMPORTED_MODULE_5__", "_json__WEBPACK_IMPORTED_MODULE_6__", "printTypes", "fallbackPrintable", "type", "properties", "gridHeaderStyle", "gridStyle", "onError", "onIncompatibleBrowser", "modalMessage", "documentTitle", "repeatTableHeader", "css", "base64", "onPdfOpen", "honorMarginPadding", "honorColor", "args", "Error", "encodeURI", "k", "concat", "show", "usedFrame", "parentNode", "srcdoc", "isArray", "file", "info", "win", "open", "focus", "./src/js/json.js", "map", "field", "displayName", "columnSize", "data", "a", "stringData", "split", "./src/js/modal.js", "Modal", "printModal", "contentDiv", "closeButton", "spinner", "messageNode", "getElementsByTagName", "./src/js/pdf.js", "_print__WEBPACK_IMPORTED_MODULE_0__", "_functions__WEBPACK_IMPORTED_MODULE_1__", "createBlobAndPrint", "localPdf", "Blob", "createObjectURL", "bytesArray", "Uint8Array", "from", "atob", "charCodeAt", "location", "origin", "req", "XMLHttpRequest", "responseType", "statusText", "status", "response", "./src/js/print.js", "performPrint", "iframeElement", "contentWindow", "execCommand", "visibility", "left", "onload", "printDocument", "contentDocument", "body", "head", "images", "promises", "image", "href", "Promise", "resolve", "pollImage", "naturalWidth", "complete", "setTimeout", "all", "./src/js/raw-html.js", "./src/sass/index.scss", "0", "Icons", "xmlns", "fill", "viewBox", "PrintIcon", "PlusIcon", "MinusIcon", "ArrowRepeat", "PDFViewer", "Component", "props", "super", "this", "ctrlKey", "preventDefault", "deltaY", "increaseScale", "reduceScale", "setState", "state", "_this", "getData", "blob", "requestOptions", "method", "headers", "Authorization", "localStorage", "getItem", "fetch", "link", "url", "download", "replace", "process", "env", "REACT_APP_BACK_HOST", "click", "catch", "log", "numPages", "numPagesArr", "visibleMenu", "isRender", "isLoadingError", "mainDiv", "createRef", "pdfjsLib", "workerSrc", "componentDidMount", "self", "loadingTask", "cMapUrl", "cMapPacked", "loadedPdf", "push", "current", "onWheelEvent", "reason", "position", "onClick", "downloadDocument", "round", "ref", "minHeight", "marginBottom", "loadingDocument"]
}
